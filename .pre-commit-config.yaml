repos:
- repo: https://github.com/PyCQA/autoflake
  rev: v1.7.7
  hooks:
  - id: autoflake
- repo: https://github.com/psf/black
  rev: 22.10.0
  hooks:
  - id: black
- repo: https://github.com/pycqa/docformatter
  rev: v1.5.0
  hooks:
  - id: docformatter
- repo: https://github.com/pycqa/isort
  rev: 5.10.1
  hooks:
  - id: isort
- repo: https://github.com/pre-commit/mirrors-mypy
  rev: v0.990
  hooks:
  - id: mypy
    additional_dependencies:
    - .
    - types-tabulate
- repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  rev: v2.4.0
  hooks:
  - id: pretty-format-toml
    args:
    - --autofix
  - id: pretty-format-yaml
    args:
    - --autofix
    - --indent
    - '2'
- repo: https://github.com/pre-commit/mirrors-prettier
  rev: v3.0.0-alpha.4
  hooks:
  - id: prettier
    types_or:
    - javascript
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.3.0
  hooks:
  - id: check-added-large-files  # - prevents giant files from being committed.
  - id: check-ast  # - simply checks whether the files parse as valid python.
  - id: check-byte-order-marker  # - forbids files which have a utf-8 byte-order marker.
  - id: check-builtin-literals  # - requires literal syntax when initializing empty or zero python builtin types.
  - id: check-case-conflict  # - checks for files that would conflict in case-insensitive filesystems.
  - id: check-docstring-first  # - checks a common error of defining a docstring after code.
  - id: check-json  # - checks json files for parseable syntax.
  - id: pretty-format-json  # - sets a standard for formatting json files.
  - id: check-merge-conflict  # - checks for files that contain merge conflict strings.
  - id: check-toml  # - checks toml files for parseable syntax.
  - id: check-xml  # - checks xml files for parseable syntax.
  - id: check-yaml  # - checks yaml files for parseable syntax.
  - id: debug-statements  # - checks for debugger imports and py37+ `breakpoint()` calls in python source.
  - id: detect-private-key  # - detects the presence of private keys.
  - id: end-of-file-fixer  # - ensures that a file is either empty, or ends with one newline.
  - id: mixed-line-ending  # - replaces or checks mixed line ending.
  - id: name-tests-test  # - verifies that test files are named correctly.'
    args:
    - --unittest
  - id: no-commit-to-branch  # - don't commit to branch
  - id: requirements-txt-fixer  # - sorts entries in requirements.txt.
  - id: sort-simple-yaml  # - sorts simple yaml files which consist only of top-level keys, preserving comments and blocks.
  - id: trailing-whitespace  # - trims trailing whitespace.
